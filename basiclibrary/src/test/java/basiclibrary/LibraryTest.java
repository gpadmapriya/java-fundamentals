/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class LibraryTest {

    /* Happy path */
    @Test
    public void testRoll() {
        int num = 7;
        assertEquals("Array length returned should be equal to number of dice rolls", Library.roll(num).length, num);
    }

    /* No dice roll should be equal to zero - edge case
    https://stackoverflow.com/questions/49378314/check-if-array-does-not-contain-a-certain-value
     */
    @Test
    public void testRoll_noZeros() {
        assertFalse("No dice roll should be equal to zero", Arrays.asList(Library.roll(7)).contains(0));
    }

    /* Array contains duplicates */
    @Test
    public void testContainsDuplicates() {
        int[] arr = new int[]{3, 4, 4, 1};
        assertTrue("Should return true for array with duplicate elements", Library.containsDuplicates(arr));
    }

    /* Array does not contain duplicates */
    @Test
    public void testContainsDuplicates_failure() {
        int[] arr = new int[]{3, 2, 4, 1};
        assertFalse("Should return false for array with no duplicate elements", Library.containsDuplicates(arr));
    }

    @Test
    public void testReturnAverage(){
        int[] arr = new int[]{3, 4, 4, 7};
        assertEquals("Returns an int - assertEquals does not allow double values", Library.returnAverage(arr), 4);
    }

    @Test public void testReturnLowestAverage(){
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        int[] actual = new int[]{55, 54, 60, 53, 59, 57, 61};
    assertArrayEquals("Returning array with lowest average given a 2 dimensional int array", Library.returnLowestAverage(weeklyMonthTemperatures), actual);
    }

    @Test public void testanalyzeWeatherData(){
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        String expected = Library.analyzeWeatherData(weeklyMonthTemperatures);
        String actual = "High: 72\n" +
                "Low: 51\n" +
                "Never saw temperature: 63\n" +
                "Never saw temperature: 67\n" +
                "Never saw temperature: 68\n" +
                "Never saw temperature: 69";
        assertEquals(expected, actual);
    }

    @Test public void testTally(){
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String expected = Library.tally(votes);
        String actual = "Bush received the most votes!";
        assertEquals(expected, actual);

    }
}