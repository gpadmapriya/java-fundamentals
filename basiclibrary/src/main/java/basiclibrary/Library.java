/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.Arrays;

public class Library {
    public static int[] roll(int number) {
        int numberRolled = 0;
        int[] allNumbersRolled = new int[number];
        for (int i = 0; i < number; i++){
            numberRolled = (int)Math.ceil(Math.random()*6);
            allNumbersRolled[i] = numberRolled;
        }
        return allNumbersRolled;
    }

    public static boolean containsDuplicates(int[] number) {
    for (int i = 0; i < number.length; i++){
        for (int j = i + 1; j < number.length; j++){
            /* use .equals if it is a string array */
            if (number[i] == number[j]){
                return true;
            }
        }
    }
    return false;
    }

    public static int returnAverage(int[] number){
        int sum = 0;
        for (int i = 0; i < number.length; i++){
            sum = sum + number[i];
        }
        int average = sum / number.length;
        return average;
    }

    /* Helper function for returnLowestAverage */
    public static double returnAverageDouble(int[] number){
        double sum = 0;
        for (int i = 0; i < number.length; i++){
            sum = sum + number[i];
        }
        double average = sum / number.length;
        return average;
    }
    public static int[] returnLowestAverage(int[][] number){
        int index = 0;
        double[] averageArray = new double[number.length];
        for (int i = 0; i < number.length; i++ ){
            averageArray[i] = returnAverageDouble(number[i]);
        }
        for (int j = 0; j < averageArray.length; j++){
            for (int k = j + 1; k < averageArray.length; k++) {
                if (averageArray[k] < averageArray[j]) {
                    index = k;
                } else {
                    index = j;
                }
            }
        }
        return number[index];
    }
}
